generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  fullName     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  role         Role          @default(USER)
  userName     String        @default("")
  profile      Profile?
  transactions Transaction[]
}

model Profile {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  bio       String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  portfolio Portfolio?
  user      User       @relation(fields: [userId], references: [id])
}

model Stock {
  id              Int              @id @default(autoincrement())
  stockId         Int              @unique
  ticker          String           @unique
  companyName     String?
  currentPrice    Decimal          @default(0.00) @db.Money
  openPrice       Decimal          @default(0.00) @db.Money
  dayHigh         Decimal          @default(0.00) @db.Money
  dayLow          Decimal          @default(0.00) @db.Money
  dailyVolume     Int              @default(0)
  createdAt       DateTime         @default(now())
  initialVolume   Int
  updatedAt       DateTime         @updatedAt
  portfolioStocks PortfolioStock[]
  Transaction     Transaction[]
}

model Portfolio {
  id           Int              @id @default(autoincrement())
  cash         Decimal          @default(0.00) @db.Money
  createdAt    DateTime         @default(now())
  updatedAt    DateTime         @updatedAt
  totalValue   Decimal          @default(0.00) @db.Money
  userId       Int              @unique
  user         Profile          @relation(fields: [userId], references: [id])
  stocks       PortfolioStock[]
  transactions Transaction[]
}

model PortfolioStock {
  id          Int       @id @default(autoincrement())
  portfolioId Int
  stockId     Int
  quantity    Int       @default(0)
  averageCost Decimal   @default(0.00) @db.Money
  portfolio   Portfolio @relation(fields: [portfolioId], references: [id])
  stock       Stock     @relation(fields: [stockId], references: [id])

  @@unique([portfolioId, stockId])
}

model Transaction {
  id          Int          @id @default(autoincrement())
  userId      Int
  type        TransactType
  stockId     Int?
  quantity    Int?
  amount      Decimal      @default(0.00) @db.Money
  createdAt   DateTime     @default(now())
  portfolioId Int
  portfolio   Portfolio    @relation(fields: [portfolioId], references: [id])
  stock       Stock?       @relation(fields: [stockId], references: [id])
  User        User         @relation(fields: [userId], references: [id])
}

model MarketSchedule {
  id         Int       @id @default(autoincrement())
  marketOpen Boolean   @default(false)
  startTime  DateTime?
  endTime    DateTime?
  holiday    Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum TransactType {
  BUY
  SELL
  DEPOSIT
  WITHDRAW
}
