{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/user.ts"],"sourcesContent":["import { pool } from \"@/lib/db.js\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Handler to fetch user data\r\nexport async function getUserData() {\r\n  try {\r\n    const { rows } = await pool.query(\r\n      \"SELECT userid AS id, email, fullname, pword, username, accesslevel FROM simstockdb.user\"\r\n    );\r\n    return rows;\r\n  } catch (err) {\r\n    console.error(\"Error retrieving user data:\", err);\r\n    throw new Error(\"Error retrieving user data\");\r\n  }\r\n}\r\n\r\n// Handler to add a new user\r\nexport async function addUser(req) {\r\n  try {\r\n    const { email, fullname, pword, username, accesslevel } = await req.json();\r\n\r\n    if (!email || !fullname || !pword || !username) {\r\n      return NextResponse.json(\r\n        { error: \"All fields are required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if a record with the same email or username already exists\r\n    const checkQuery =\r\n      \"SELECT * FROM simstockdb.user WHERE email = $1 OR username = $2\";\r\n    const checkResult = await pool.query(checkQuery, [email, username]);\r\n\r\n    if (checkResult.rows.length > 0) {\r\n      return NextResponse.json(\r\n        { error: \"A user with the same email or username already exists\" },\r\n        { status: 409 }\r\n      );\r\n    }\r\n\r\n    // Insert the new record if no conflict is found\r\n    const insertQuery =\r\n      \"INSERT INTO simstockdb.user (email, fullname, pword, username) VALUES ($1, $2, $3, $4) RETURNING *\";\r\n    const insertResult = await pool.query(insertQuery, [\r\n      email,\r\n      fullname,\r\n      pword,\r\n      username,\r\n    ]);\r\n\r\n    return NextResponse.json(insertResult.rows[0]);\r\n  } catch (err) {\r\n    console.error(\"Error adding user data:\", err);\r\n    return NextResponse.json(\r\n      { error: \"Error adding user data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AACA;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,KAAK,CAC/B;QAEF,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,eAAe,QAAQ,GAAG;IAC/B,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,MAAM,IAAI,IAAI;QAExE,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,CAAC,UAAU;YAC9C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,mEAAmE;QACnE,MAAM,aACJ;QACF,MAAM,cAAc,MAAM,KAAK,KAAK,CAAC,YAAY;YAAC;YAAO;SAAS;QAElE,IAAI,YAAY,IAAI,CAAC,MAAM,GAAG,GAAG;YAC/B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAwD,GACjE;gBAAE,QAAQ;YAAI;QAElB;QAEA,gDAAgD;QAChD,MAAM,cACJ;QACF,MAAM,eAAe,MAAM,KAAK,KAAK,CAAC,aAAa;YACjD;YACA;YACA;YACA;SACD;QAED,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;IAC/C,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/stock.ts"],"sourcesContent":["import { pool } from \"@lib/db.js\";\r\nimport { NextResponse } from \"next/server\";\r\n\r\n// Handler to fetch user data\r\nexport async function getStockData() {\r\n  try {\r\n    const { rows } = await pool.query(\r\n      \"SELECT stockticker AS stockticker, companyname, currentprice, dailyvolume, openprice, pricehigh, pricelow FROM simstockdb.stock\"\r\n    );\r\n    return rows;\r\n  } catch (err) {\r\n    console.error(\"Error retrieving stock data:\", err);\r\n    throw new Error(\"Error retrieving stock data\");\r\n  }\r\n}\r\n\r\n// Handler to add a new user\r\nexport async function addStock(req) {\r\n  try {\r\n    const {\r\n      stockticker,\r\n      companyname,\r\n      currentprice = 0,\r\n      dailyvolume = 0,\r\n      openprice = 0,\r\n      pricehigh = 0,\r\n      pricelow = 0,\r\n    } = await req.json();\r\n\r\n    if (!stockticker || !companyname || !dailyvolume || !openprice) {\r\n      return NextResponse.json(\r\n        { error: \"All fields are required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    // Check if a record with the same email or username already exists\r\n    const checkQuery = \"SELECT * FROM simstockdb.stock WHERE stockticker = $1\";\r\n    const checkResult = await pool.query(checkQuery, [stockticker]);\r\n\r\n    if (checkResult.rows.length > 0) {\r\n      return NextResponse.json(\r\n        { error: \"Given stock ticker already exists\" },\r\n        { status: 409 }\r\n      );\r\n    }\r\n\r\n    // Insert the new record if no conflict is found\r\n    const insertQuery =\r\n      \"INSERT INTO simstockdb.stock (stockticker, companyname, currentprice, dailyvolume, openprice, pricehigh, pricelow) VALUES ($1, $2, $3, $4, $5, $6, $7) RETURNING *\";\r\n    const insertResult = await pool.query(insertQuery, [\r\n      stockticker,\r\n      companyname,\r\n      currentprice,\r\n      dailyvolume,\r\n      openprice,\r\n      pricehigh,\r\n      pricelow,\r\n    ]);\r\n\r\n    return NextResponse.json(insertResult.rows[0]);\r\n  } catch (err) {\r\n    console.error(\"Error adding stock data:\", err);\r\n    return NextResponse.json(\r\n      { error: \"Error adding stock data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;AACA;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM,KAAK,KAAK,CAC/B;QAEF,OAAO;IACT,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM,IAAI,MAAM;IAClB;AACF;AAGO,eAAe,SAAS,GAAG;IAChC,IAAI;QACF,MAAM,EACJ,WAAW,EACX,WAAW,EACX,eAAe,CAAC,EAChB,cAAc,CAAC,EACf,YAAY,CAAC,EACb,YAAY,CAAC,EACb,WAAW,CAAC,EACb,GAAG,MAAM,IAAI,IAAI;QAElB,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,eAAe,CAAC,WAAW;YAC9D,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA0B,GACnC;gBAAE,QAAQ;YAAI;QAElB;QAEA,mEAAmE;QACnE,MAAM,aAAa;QACnB,MAAM,cAAc,MAAM,KAAK,KAAK,CAAC,YAAY;YAAC;SAAY;QAE9D,IAAI,YAAY,IAAI,CAAC,MAAM,GAAG,GAAG;YAC/B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QAEA,gDAAgD;QAChD,MAAM,cACJ;QACF,MAAM,eAAe,MAAM,KAAK,KAAK,CAAC,aAAa;YACjD;YACA;YACA;YACA;YACA;YACA;YACA;SACD;QAED,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;IAC/C,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/query/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { getUserData, addUser } from \"@/lib/user.ts\";\r\nimport { getStockData, addStock } from \"@/lib/stock.ts\";\r\n\r\n// This script handles the API routing for the stock trading system simulator.\r\nexport const dynamic = \"force-static\";\r\nexport const revalidate = 1;\r\n\r\n// Main handler to route GET requests\r\nexport async function GET(req) {\r\n  const url = new URL(req.url);\r\n  const resource = url.searchParams.get(\"resource\");\r\n\r\n  if (!resource) {\r\n    return NextResponse.json(\r\n      { error: \"Resource not specified\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  let data;\r\n  try {\r\n    switch (resource) {\r\n      case \"user\":\r\n        data = await getUserData();\r\n        break;\r\n      case \"stock\":\r\n        data = await getStockData();\r\n        break;\r\n      default:\r\n        return NextResponse.json(\r\n          { error: \"Invalid resource\" },\r\n          { status: 404 }\r\n        );\r\n    }\r\n\r\n    console.log(\"Fetched data:\", data);\r\n    return NextResponse.json(data);\r\n  } catch (err) {\r\n    console.error(\"Error retrieving data:\", err);\r\n    return NextResponse.json(\r\n      { error: \"Error retrieving data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// Main handler to route POST requests\r\nexport async function POST(req) {\r\n  const url = new URL(req.url);\r\n  const resource = url.searchParams.get(\"resource\");\r\n\r\n  if (!resource) {\r\n    return NextResponse.json(\r\n      { error: \"Resource not specified\" },\r\n      { status: 400 }\r\n    );\r\n  }\r\n\r\n  try {\r\n    let result;\r\n\r\n    switch (resource) {\r\n      case \"user\":\r\n        result = await addUser(req);\r\n        break;\r\n      case \"stock\":\r\n        result = await addStock(req);\r\n        break;\r\n      default:\r\n        return NextResponse.json(\r\n          { error: \"Invalid resource\" },\r\n          { status: 404 }\r\n        );\r\n    }\r\n\r\n    console.log(\"Fetched Data\", result);\r\n    return NextResponse.json(result);\r\n  } catch (err) {\r\n    console.error(`Error handling POST for resource \"${resource}\":`, err);\r\n    return NextResponse.json(\r\n      { error: \"Error handling POST request\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAGO,MAAM,UAAU;AAChB,MAAM,aAAa;AAGnB,eAAe,IAAI,GAAG;IAC3B,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG;IAC3B,MAAM,WAAW,IAAI,YAAY,CAAC,GAAG,CAAC;IAEtC,IAAI,CAAC,UAAU;QACb,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;IACJ,IAAI;QACF,OAAQ;YACN,KAAK;gBACH,OAAO,MAAM,CAAA,GAAA,oHAAA,CAAA,cAAW,AAAD;gBACvB;YACF,KAAK;gBACH,OAAO,MAAM,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD;gBACxB;YACF;gBACE,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAAmB,GAC5B;oBAAE,QAAQ;gBAAI;QAEpB;QAEA,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAwB,GACjC;YAAE,QAAQ;QAAI;IAElB;AACF;AAGO,eAAe,KAAK,GAAG;IAC5B,MAAM,MAAM,IAAI,IAAI,IAAI,GAAG;IAC3B,MAAM,WAAW,IAAI,YAAY,CAAC,GAAG,CAAC;IAEtC,IAAI,CAAC,UAAU;QACb,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAElB;IAEA,IAAI;QACF,IAAI;QAEJ,OAAQ;YACN,KAAK;gBACH,SAAS,MAAM,CAAA,GAAA,oHAAA,CAAA,UAAO,AAAD,EAAE;gBACvB;YACF,KAAK;gBACH,SAAS,MAAM,CAAA,GAAA,qHAAA,CAAA,WAAQ,AAAD,EAAE;gBACxB;YACF;gBACE,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;oBAAE,OAAO;gBAAmB,GAC5B;oBAAE,QAAQ;gBAAI;QAEpB;QAEA,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,KAAK;QACZ,QAAQ,KAAK,CAAC,CAAC,kCAAkC,EAAE,SAAS,EAAE,CAAC,EAAE;QACjE,OAAO,+PAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA8B,GACvC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}