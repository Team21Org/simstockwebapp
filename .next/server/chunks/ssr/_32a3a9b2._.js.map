{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/route.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { NextResponse } from \"next/server\";\r\nimport prisma from \"@/lib/prisma\";\r\n\r\nexport async function GET(\r\n  req: Request,\r\n  { params }: { params: { model: string } }\r\n) {\r\n  const { model } = params;\r\n\r\n  try {\r\n    // Dynamically access the Prisma model\r\n    const data = await (prisma as any)[model]?.findMany();\r\n\r\n    if (!data) {\r\n      return NextResponse.json(\r\n        { error: `Model '${model}' not found` },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error(`Error fetching data for model '${model}':`, error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;IAKsB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/signup/page.tsx"],"sourcesContent":["\"use client\";\r\n// src/app/signup/page.js\r\n//This is the user registration portal\r\nimport prisma from \"@/lib/prisma\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport Head from \"next/head\";\r\nimport \"@/app/lib/route\"; // Import the middleware to use the GET function\r\n// import Image from \"next/image\";\r\n// import Link from \"next/link\";\r\n\r\ninterface User {\r\n  id: string;\r\n  email: string;\r\n  fullName: string;\r\n  userName: string;\r\n}\r\n\r\nexport default function SignUp() {\r\n  const [users, setUsers] = useState<User[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function fetchData(model: string) {\r\n      try {\r\n        const response = await fetch(`/api/${model}`);\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to fetch data for model: ${model}`);\r\n        }\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    fetchData(\"user\"); // Fetch data for the \"user\" model\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n        <title>Stock Sim | Sign-Up</title>\r\n      </Head>\r\n      <div className=\"w-full max-w-md\">\r\n        {loading ? (\r\n          <p>Loading users...</p>\r\n        ) : (\r\n          <ol>\r\n            {users.map((user) => (\r\n              <li key={user.id} className=\"mb-2\">\r\n                {user.email} - {user.fullName} - {user.userName}\r\n              </li>\r\n            ))}\r\n          </ol>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAKA;AACA;AACA,wMAA0B,gDAAgD;AAP1E;;;;;AAkBe,SAAS;IACtB,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,oTAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe,UAAU,KAAa;YACpC,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,CAAC,KAAK,EAAE,OAAO;gBAC5C,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM,CAAC,gCAAgC,EAAE,OAAO;gBAC5D;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,SAAS;YACX,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,wBAAwB;YACxC,SAAU;gBACR,WAAW;YACb;QACF;QAEA,UAAU,SAAS,kCAAkC;IACvD,GAAG,EAAE;IAEL,qBACE;;0BACE,6VAAC,mRAAA,CAAA,UAAI;;kCACH,6VAAC;wBAAK,SAAQ;;;;;;kCACd,6VAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,6VAAC;wBAAK,WAAU;wBAAkB,SAAQ;;;;;;kCAC1C,6VAAC;kCAAM;;;;;;;;;;;;0BAET,6VAAC;gBAAI,WAAU;0BACZ,wBACC,6VAAC;8BAAE;;;;;yCAEH,6VAAC;8BACE,MAAM,GAAG,CAAC,CAAC,qBACV,6VAAC;4BAAiB,WAAU;;gCACzB,KAAK,KAAK;gCAAC;gCAAI,KAAK,QAAQ;gCAAC;gCAAI,KAAK,QAAQ;;2BADxC,KAAK,EAAE;;;;;;;;;;;;;;;;;AAS9B","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/next%4015.2.4_%40babel%2Bcore%407.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4MAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 139, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/next%4015.2.4_%40babel%2Bcore%407.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/next%4015.2.4_%40babel%2Bcore%407.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8OAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}