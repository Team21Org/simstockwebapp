{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\nimport { withAccelerate } from \"@prisma/extension-accelerate\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nconst prisma =\r\n  globalForPrisma.prisma || new PrismaClient().$extends(withAccelerate());\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SACJ,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,GAAG,QAAQ,CAAC,CAAA,GAAA,oSAAA,CAAA,iBAAc,AAAD;AAErE,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/middleware.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { NextResponse } from \"next/server\";\r\nimport prisma from \"@/lib/prisma\";\r\n\r\nexport async function GET(\r\n  req: Request,\r\n  { params }: { params: { model: string } }\r\n) {\r\n  const { model } = params;\r\n\r\n  try {\r\n    // Dynamically access the Prisma model\r\n    const data = await (prisma as any)[model]?.findMany();\r\n\r\n    if (!data) {\r\n      return NextResponse.json(\r\n        { error: `Model '${model}' not found` },\r\n        { status: 404 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json(data);\r\n  } catch (error) {\r\n    console.error(`Error fetching data for model '${model}':`, error);\r\n    return NextResponse.json(\r\n      { error: \"Failed to fetch data\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;;;;AAEO,eAAe,uCAAC,GAAD,IACpB,GAAY,EACZ,EAAE,MAAM,EAAiC;IAEzC,MAAM,EAAE,KAAK,EAAE,GAAG;IAElB,IAAI;QACF,sCAAsC;QACtC,MAAM,OAAO,MAAM,AAAC,oHAAA,CAAA,UAAM,AAAQ,CAAC,MAAM,EAAE;QAE3C,IAAI,CAAC,MAAM;YACT,OAAO,6OAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO,CAAC,OAAO,EAAE,MAAM,WAAW,CAAC;YAAC,GACtC;gBAAE,QAAQ;YAAI;QAElB;QAEA,OAAO,6OAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,MAAM,EAAE,CAAC,EAAE;QAC3D,OAAO,6OAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAAuB,GAChC;YAAE,QAAQ;QAAI;IAElB;AACF;;;IAzBsB;;AAAA,8VAAA","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/signup/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/signup/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/signup/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAuR,GACpT,qDACA","debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/signup/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/signup/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/signup/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oWAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmQ,GAChS,iCACA","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}