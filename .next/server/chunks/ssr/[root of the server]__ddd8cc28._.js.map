{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\nimport { withAccelerate } from \"@prisma/extension-accelerate\";\r\n\r\nconst globalForPrisma = global as unknown as { prisma: PrismaClient };\r\n\r\nconst prisma =\r\n  globalForPrisma.prisma || new PrismaClient().$extends(withAccelerate());\r\n\r\nif (process.env.NODE_ENV !== \"production\") globalForPrisma.prisma = prisma;\r\n\r\nexport default prisma;\r\n"],"names":[],"mappings":";;;AAAA;AACA;AAAA;;;AAEA,MAAM,kBAAkB;AAExB,MAAM,SACJ,gBAAgB,MAAM,IAAI,IAAI,6HAAA,CAAA,eAAY,GAAG,QAAQ,CAAC,CAAA,GAAA,oSAAA,CAAA,iBAAc,AAAD;AAErE,wCAA2C,gBAAgB,MAAM,GAAG;uCAErD","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/app/signup/page.tsx"],"sourcesContent":["\"use client\";\r\n// src/app/signup/page.js\r\n//This is the user registration portal\r\nimport prisma from \"@/lib/prisma\";\r\nimport Head from \"next/head\";\r\n// import Image from \"next/image\";\r\n// import Link from \"next/link\";\r\n\r\nexport default async function SignUp() {\r\n  const users = await prisma.user.findMany();\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\" />\r\n        <title>Stock Sim | Sign-Up</title>\r\n      </Head>\r\n      <div className=\"w-full max-w-md\">\r\n        <h1 className=\"text-2xl font-bold mb-4\">Sign Up Now!</h1>\r\n        <ol className=\"list-decimal list-inside font-[family-name:var(--font-geist-sans)]\">\r\n          {users.map((user) => (\r\n            <li key={user.id} className=\"mb-2\">\r\n              {user.email} - {user.fullName} - {user.userName}\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA,yBAAyB;AACzB,sCAAsC;AACtC;AACA;AAJA;;;;AAQe,eAAe;IAC5B,MAAM,QAAQ,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,QAAQ;IAExC,qBACE;;0BACE,6VAAC,mRAAA,CAAA,UAAI;;kCACH,6VAAC;wBAAK,SAAQ;;;;;;kCACd,6VAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,6VAAC;wBAAK,WAAU;wBAAkB,SAAQ;;;;;;kCAC1C,6VAAC;kCAAM;;;;;;;;;;;;0BAET,6VAAC;gBAAI,WAAU;;kCACb,6VAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,6VAAC;wBAAG,WAAU;kCACX,MAAM,GAAG,CAAC,CAAC,qBACV,6VAAC;gCAAiB,WAAU;;oCACzB,KAAK,KAAK;oCAAC;oCAAI,KAAK,QAAQ;oCAAC;oCAAI,KAAK,QAAQ;;+BADxC,KAAK,EAAE;;;;;;;;;;;;;;;;;;AAQ5B","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/next%4015.2.4_%40babel%2Bcore%407.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4MAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/%40prisma%2Bextension-accelerat_689191d017558f044f7bd9fdbf0e2c6f/node_modules/%40prisma/extension-accelerate/dist/esm/semver.js"],"sourcesContent":["/**\n * Compares two SemVer strings.\n * @returns positive if b > a, negative if b < a, and 0 if versions are equal\n */\nexport function compareSemVer(a, b) {\n    const [major1 = 0, minor1 = 0, patch1 = 0] = a.split(\".\").map(Number);\n    const [major2 = 0, minor2 = 0, patch2 = 0] = b.split(\".\").map(Number);\n    const major = major2 - major1;\n    const minor = minor2 - minor1;\n    const patch = patch2 - patch1;\n    return major || minor || patch;\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,cAAc,CAAC,EAAE,CAAC;IAC9B,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC;IAC9D,MAAM,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC,GAAG,EAAE,KAAK,CAAC,KAAK,GAAG,CAAC;IAC9D,MAAM,QAAQ,SAAS;IACvB,MAAM,QAAQ,SAAS;IACvB,MAAM,QAAQ,SAAS;IACvB,OAAO,SAAS,SAAS;AAC7B","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/%40prisma%2Bextension-accelerat_689191d017558f044f7bd9fdbf0e2c6f/node_modules/%40prisma/extension-accelerate/dist/esm/user-agent.js"],"sourcesContent":["import PrismaDefault from \"@prisma/client/scripts/default-index.js\";\n/**\n * Generates a User-Agent string derived from the current execution environment.\n */\nexport function getUserAgent() {\n    const prismaVersion = PrismaDefault.Prisma.prismaVersion;\n    const parts = [\n        getRuntimeSegment(),\n        `PrismaEngine/${prismaVersion.engine}`,\n        `PrismaClient/${prismaVersion.client}`,\n    ];\n    return parts.join(\" \");\n}\n/**\n * Generates a User-Agent segment for the JavaScript runtime environment.\n */\nfunction getRuntimeSegment() {\n    if (typeof navigator !== \"undefined\") {\n        // Deno, Bun, Cloudflare Workers, general WinterCG compat\n        return navigator.userAgent;\n    }\n    else if (typeof process !== \"undefined\" &&\n        typeof process.versions !== \"undefined\") {\n        return `Node/${process.versions.node} (${process.platform}; ${process.arch})`;\n    }\n    else if (\"EdgeRuntime\" in globalThis) {\n        return `Vercel-Edge-Runtime`;\n    }\n    else {\n        return `UnknownRuntime`;\n    }\n}\n"],"names":[],"mappings":";;;AAAA;;AAIO,SAAS;IACZ,MAAM,gBAAgB,uMAAA,CAAA,UAAa,CAAC,MAAM,CAAC,aAAa;IACxD,MAAM,QAAQ;QACV;QACA,CAAC,aAAa,EAAE,cAAc,MAAM,EAAE;QACtC,CAAC,aAAa,EAAE,cAAc,MAAM,EAAE;KACzC;IACD,OAAO,MAAM,IAAI,CAAC;AACtB;AACA;;CAEC,GACD,SAAS;IACL,IAAI,OAAO,cAAc,aAAa;QAClC,yDAAyD;QACzD,OAAO,UAAU,SAAS;IAC9B,OACK,IAAI,OAAO,YAAY,eACxB,OAAO,QAAQ,QAAQ,KAAK,aAAa;QACzC,OAAO,CAAC,KAAK,EAAE,QAAQ,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,QAAQ,QAAQ,CAAC,EAAE,EAAE,QAAQ,IAAI,CAAC,CAAC,CAAC;IACjF,OACK,IAAI,iBAAiB,YAAY;QAClC,OAAO,CAAC,mBAAmB,CAAC;IAChC,OACK;QACD,OAAO,CAAC,cAAc,CAAC;IAC3B;AACJ","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/%40prisma%2Bextension-accelerat_689191d017558f044f7bd9fdbf0e2c6f/node_modules/%40prisma/extension-accelerate/dist/esm/extension.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/// <reference lib=\"dom\" />\n// importing default is needed for ESM compatibility\n// default-index is a CJS file, so named exports are not resolved\n// the types create a separate resolution issue, so they are still imported by name\nimport PrismaDefault from \"@prisma/client/scripts/default-index.js\";\nimport { compareSemVer } from \"./semver.js\";\nimport { getUserAgent } from \"./user-agent.js\";\nconst EXTENSION_NAME = \"@prisma/extension-accelerate\";\nexport const FETCH_FAILURE_MESSAGE = \"Unable to connect to the Accelerate API. This may be due to a network or DNS issue. Please check your connection and the Accelerate connection string. For details, visit https://www.prisma.io/docs/accelerate/troubleshoot.\";\nfunction makeWithCacheHeaders(fetcher) {\n    const userAgent = getUserAgent();\n    let machineHint = undefined;\n    return async (params) => {\n        const { args } = params;\n        const { cacheStrategy, __accelerateInfo = false, ...rest } = args;\n        let info = null;\n        const { __internalParams, query } = params;\n        __internalParams.customDataProxyFetch = () => {\n            return async (url, options) => {\n                const cacheControl = new Array();\n                if (typeof cacheStrategy?.ttl === \"number\") {\n                    cacheControl.push(`max-age=${cacheStrategy.ttl}`);\n                }\n                if (typeof cacheStrategy?.swr === \"number\") {\n                    cacheControl.push(`stale-while-revalidate=${cacheStrategy.swr}`);\n                }\n                const cacheTags = cacheStrategy?.tags?.join(\",\") ?? \"\";\n                options.headers = {\n                    ...options.headers,\n                    \"cache-control\": cacheControl.length > 0 ? cacheControl.join(\",\") : `no-cache`,\n                    \"user-agent\": userAgent,\n                    ...(cacheTags.length > 0\n                        ? { \"accelerate-cache-tags\": cacheTags }\n                        : {}),\n                };\n                if (machineHint) {\n                    options.headers[\"accelerate-query-engine-jwt\"] = machineHint;\n                }\n                try {\n                    const response = await fetcher(url, options);\n                    info = {\n                        cacheStatus: response.headers.get(\"accelerate-cache-status\"),\n                        lastModified: new Date(response.headers.get(\"last-modified\") ?? \"\"),\n                        region: response.headers.get(\"cf-ray\")?.split(\"-\")[1] ?? \"unspecified\",\n                        requestId: response.headers.get(\"cf-ray\") ?? \"unspecified\",\n                        signature: response.headers.get(\"accelerate-signature\") ?? \"unspecified\",\n                    };\n                    machineHint =\n                        response.headers.get(\"accelerate-query-engine-jwt\") ?? undefined;\n                    return response;\n                }\n                catch (e) {\n                    throw new Error(FETCH_FAILURE_MESSAGE);\n                }\n            };\n        };\n        if (__accelerateInfo) {\n            const data = await query(rest, __internalParams);\n            return { data, info };\n        }\n        else {\n            return query(rest, __internalParams);\n        }\n    };\n}\nexport function makeAccelerateExtension(fetcher) {\n    // ctx.$parent was added in 5.1.0 to support iTx in extensions\n    const enableCtxParent = compareSemVer(\"5.1.0\", PrismaDefault.Prisma.prismaVersion.client) >= 0;\n    return PrismaDefault.Prisma.defineExtension((client) => {\n        const withCacheHeaders = makeWithCacheHeaders(fetcher);\n        // api key is extracted from config during engine start\n        const apiKeyPromise = client._engine\n            .start()\n            .then(() => client._engine.apiKey?.());\n        async function invalidate(input) {\n            const apiKey = await apiKeyPromise;\n            if (!apiKey) {\n                return { requestId: \"unspecified\" };\n            }\n            let response;\n            try {\n                response = await fetcher(`https://accelerate.prisma-data.net/invalidate`, {\n                    method: \"POST\",\n                    headers: {\n                        authorization: `Bearer ${apiKey}`,\n                        \"content-type\": \"application/json\",\n                    },\n                    body: JSON.stringify(input),\n                });\n            }\n            catch (e) {\n                throw new Error(FETCH_FAILURE_MESSAGE);\n            }\n            if (!response?.ok) {\n                const body = await response.text();\n                throw new Error(`Failed to invalidate Accelerate cache. Response was ${response.status} ${response.statusText}. ${body}`);\n            }\n            // discard the response body to avoid memory leaks on some runtimes\n            void response.body?.cancel();\n            return {\n                requestId: response.headers.get(\"cf-ray\") ?? \"unspecified\",\n            };\n        }\n        const xclient = client.$extends({\n            name: EXTENSION_NAME,\n            query: {\n                $allModels: {\n                    // also apply withCacheHeaders to mutations for machine hint benefit\n                    $allOperations: withCacheHeaders,\n                },\n            },\n        });\n        return xclient.$extends({\n            name: EXTENSION_NAME,\n            client: {\n                $accelerate: {\n                    /**\n                     * Initiates an invalidation request for the specified cache tag values.\n                     *\n                     * A tag may only contain alphanumeric characters and underscores.\n                     * Each tag may contain a maximum of 64 characters.\n                     * A maximum of 5 tags may be invalidated per call.\n                     */\n                    invalidate: (input) => invalidate(input),\n                    /**\n                     * Initiates an invalidation request of all cache entries for this\n                     * environment.\n                     */\n                    invalidateAll: () => invalidate({ tags: \"all\" }),\n                },\n            },\n            model: {\n                $allModels: {\n                    // TODO: these functions are repetitive. Is there a type we can use to generic this?\n                    // TODO: can we define these in a map that ensures query and model overrides stay in sync/\n                    aggregate(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.aggregate(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.aggregate({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    count(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.count(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.count({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    findFirst(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.findFirst(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.findFirst({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    findFirstOrThrow(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.findFirstOrThrow(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.findFirstOrThrow({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    findMany(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.findMany(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.findMany({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    findUnique(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.findUnique(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.findUnique({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    findUniqueOrThrow(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.findUniqueOrThrow(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.findUniqueOrThrow({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                    groupBy(args) {\n                        const ctx = PrismaDefault.Prisma.getExtensionContext(this);\n                        const model = enableCtxParent\n                            ? ctx.$parent[ctx.$name]\n                            : xclient[ctx.name];\n                        const prismaPromise = model.groupBy(args);\n                        return Object.assign(prismaPromise, {\n                            withAccelerateInfo() {\n                                return model.groupBy({\n                                    ...args,\n                                    __accelerateInfo: true,\n                                });\n                            },\n                        });\n                    },\n                },\n            },\n        });\n    });\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/%40prisma%2Bextension-accelerat_689191d017558f044f7bd9fdbf0e2c6f/node_modules/%40prisma/extension-accelerate/dist/esm/node-fetch.js"],"sourcesContent":["import https from \"node:https\";\n/**\n * Imitates `fetch` via `https` to only suit our needs, it does nothing more.\n * This is because we cannot bundle `node-fetch` as it uses many other Node.js\n * utilities, while also bloating our bundles. This approach is much leaner.\n * @param url\n * @param options\n * @returns\n */\nexport async function fetch(url, options = {}) {\n    const httpsOptions = buildOptions(options);\n    const incomingData = new Array();\n    const { origin } = new URL(url);\n    return new Promise((resolve, reject) => {\n        // we execute the https request and build a fetch response out of it\n        const request = https.request(url, httpsOptions, (response) => {\n            const { statusCode = 200, headers: { location }, } = response;\n            if (statusCode >= 301 && statusCode <= 399 && location) {\n                if (location.startsWith(\"http\") === false) {\n                    resolve(fetch(`${origin}${location}`, options));\n                }\n                else {\n                    resolve(fetch(location, options));\n                }\n            }\n            response.on(\"data\", (chunk) => incomingData.push(chunk));\n            response.on(\"end\", () => resolve(buildResponse(incomingData, response)));\n            response.on(\"error\", reject);\n        });\n        request.on(\"error\", reject);\n        request.end(options.body ?? \"\");\n    });\n}\n/**\n * Build http headers from fetch-like headers\n * @param options\n * @returns\n */\nfunction buildHeaders(options) {\n    return {\n        ...options.headers,\n        \"Content-Type\": \"application/json\",\n    };\n}\n/**\n * Build http options from fetch-like options\n * @param options\n * @returns\n */\nfunction buildOptions(options) {\n    return {\n        method: options.method,\n        headers: buildHeaders(options),\n    };\n}\n/**\n * Build a fetch-like response from an http response\n * @param incomingData\n * @param response\n * @returns\n */\nfunction buildResponse(incomingData, response) {\n    const { statusCode = 200, url, headers } = response;\n    return {\n        body: {\n            cancel() {\n                return Promise.resolve();\n            },\n        },\n        text: () => Promise.resolve(Buffer.concat(incomingData).toString()),\n        json: () => Promise.resolve(JSON.parse(Buffer.concat(incomingData).toString())),\n        ok: statusCode >= 200 && statusCode <= 299,\n        status: statusCode,\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        url: url,\n        headers: new NodeHeaders(headers),\n    };\n}\nclass NodeHeaders {\n    #headers = new Map();\n    constructor(init = {}) {\n        for (const [key, value] of Object.entries(init)) {\n            if (typeof value === \"string\") {\n                this.#headers.set(key, value);\n            }\n            else if (Array.isArray(value)) {\n                for (const val of value) {\n                    this.#headers.set(key, val);\n                }\n            }\n        }\n    }\n    append(name, value) {\n        this.#headers.set(name, value);\n    }\n    delete(name) {\n        this.#headers.delete(name);\n    }\n    get(name) {\n        return this.#headers.get(name) ?? null;\n    }\n    getSetCookie() {\n        throw new Error(\"Method not implemented.\");\n    }\n    has(name) {\n        return this.#headers.has(name);\n    }\n    set(name, value) {\n        this.#headers.set(name, value);\n    }\n    forEach(callbackfn, thisArg) {\n        for (const [key, value] of this.#headers) {\n            callbackfn.call(thisArg, value, key, this);\n        }\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/%40prisma%2Bextension-accelerat_689191d017558f044f7bd9fdbf0e2c6f/node_modules/%40prisma/extension-accelerate/dist/esm/entry.node.js"],"sourcesContent":["import { makeAccelerateExtension } from \"./extension.js\";\nimport { fetch as nodeFetch } from \"./node-fetch.js\";\nexport * from \"./extension.js\";\nexport function withAccelerate() {\n    const fetch = \"fetch\" in globalThis ? globalThis.fetch : nodeFetch;\n    return makeAccelerateExtension(fetch);\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;;AAEO,SAAS;IACZ,MAAM,QAAQ,WAAW,aAAa,WAAW,KAAK,GAAG,oRAAA,CAAA,QAAS;IAClE,OAAO,CAAA,GAAA,gRAAA,CAAA,0BAAuB,AAAD,EAAE;AACnC","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file://D%3A/Github%20Repositories/simstockwebapp/node_modules/.pnpm/next%4015.2.4_%40babel%2Bcore%407.2_16ce3abb760b473ba98db4731cd0a223/node_modules/next/src/client/components/noop-head.tsx"],"sourcesContent":["export default function NoopHead() {\n  return null\n}\n"],"names":["NoopHead"],"mappings":";;;;+BAAA,WAAA;;;eAAwBA;;;AAAT,SAASA;IACtB,OAAO;AACT","ignoreList":[0],"debugId":null}}]
}